commands:
  build_and_deploy_cmd:
    description: "Testing Build and deploy"
    parameters:
      docker_image_name:
        type: string
        default: ""
      docker_container_name:
        type: string
        default: ""
      docker_mount_volumes:
        type: boolean
        default: false
      docker_mount_src:
        type: string
        default: ""
      docker_mount_dest:
        type: string
        default: ""
    steps:
      - run:
          name: Run command
          command: |
            echo "==================================================== Configs ==================================================="
            export DOCKER_IMAGE_NAME=<<parameters.docker_image_name>>
            export DOCKER_CONTAINER_NAME=<<parameters.docker_container_name>>
            export DOCKER_MOUNT_VOLUMES=<<parameters.docker_mount_volumes>>
            export DOCKER_MOUNT_SRC=<<parameters.docker_mount_src>>
            export DOCKER_MOUNT_DEST=<<parameters.docker_mount_dest>>
            PROD_TAG=$([ "${CIRCLE_PROJECT_USERNAME}" = "singnet" ] && echo "PROD_" || echo "")
            echo            git_user  : ${CIRCLE_PROJECT_USERNAME}
            echo            git_repo  : ${CIRCLE_PROJECT_REPONAME}
            echo            git_branch: ${CIRCLE_BRANCH}
            echo            ssh_user  : ${SSH_USER_BR}
            echo            ssh_host  : ${SSH_HOST_BR}
            echo DOCKER_IMAGE_NAME    : ${DOCKER_IMAGE_NAME}
            echo DOCKER_CONTAINER_NAME: ${DOCKER_CONTAINER_NAME}
            echo DOCKER_MOUNT_VOLUMES : ${DOCKER_MOUNT_VOLUMES}
            echo DOCKER_MOUNT_SRC     : ${DOCKER_MOUNT_SRC}
            echo DOCKER_MOUNT_DEST    : ${DOCKER_MOUNT_DEST}
            echo "================================================================================================================"
            ssh -o "StrictHostKeyChecking no" ${SSH_USER_BR}@${SSH_HOST_BR} \<< EOF
              ${SERVICE_RUN_COMMAND}
            EOF
      - run:
          name: Test command
          command: |
            ssh -o "StrictHostKeyChecking no" ${SSH_USER_BR}@${SSH_HOST_BR} \<< EOF
              ${SERVICE_TEST_COMMAND}
            EOF

version: 2.1
jobs:
  deploy-opennmt-romance-translator:
    docker:
      - image: circleci/python:3.6.6-node
    working_directory: ~/singnet
    environment:
      SERVICE_FOLDER: opennmt-romance-translator
      SERVICE_RUN_COMMAND: bash -c "ls -shla"
      SERVICE_TEST_COMMAND: bash -c "sleep 10;date"
      SNETD_PORT: 7076
    steps:
      - build_and_deploy_cmd:
          docker_image_name: opennmt-romance-translator
          docker_container_name: ARTUR_OPENNMT_ROMANCE_TRANSLATOR

workflows:
  version: 2.1
  workflow:
    jobs:
    - deploy-cntk-language-understanding